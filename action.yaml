name: "Autobump version and publish to npm"
description: "Hedia's npm package autobumper & publisher"

inputs:
  github-token:
    description: "Required by izhangzhihao/delete-comment to remove comment from PR"
    required: true

  npm-token:
    description: "Required to publish package to npm"
    required: true

  node-version:
    description: "Node version"
    required: true

  label:
    description: "Type of version bump [major, minor, patch]"
    required: false

  issue-number:
    description: "Required by peter-evans/create-or-update-comment & izhangzhihao/delete-comment in order to write/remove comments on the current PR"
    required: true

  is-post-merge:
    description: "To identify if package should be published as release on npm when post-merging the PR"
    required: false
    default: "false"

  git-name:
    description: "Value for git config user.name"
    required: false
    default: "HediaBot [bot]"

  git-email:
    description: "Value for git config user.email"
    required: false
    default: "dev@hedia.co"

runs:
  using: "composite"

  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-version }}
        cache: "npm"

    - name: Set git identity
      run: |
        git config --global user.name ${{ inputs.git-name }}
        git config --global user.email ${{ inputs.git-email }}
      shell: bash

    - name: Set npm access token
      run: |
        echo "Set npm access token"
        npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      env:
        NPM_TOKEN: ${{ inputs.npm-token }}
      shell: bash

    - name: Bump package version
      id: bump-package-version
      run: |
        if [[ "${{inputs.is-post-merge}}" == 'false' ]]; then
          echo "Fetching latest package version"
          chmod +x ${{ github.action_path }}/bump-package-version.sh
          ${{ github.action_path }}/bump-package-version.sh "${LABEL}"
        else
          echo "Skipped bumping version"
        fi
        exit 0
      env:
        LABEL: ${{ inputs.label }}
      shell: bash

    - name: Publish package on npm
      id: publish-package-npm
      run: |
        if [[ "${{inputs.is-post-merge}}" == 'true' ]]; then
          echo "Publishing release on npm"
          publish=$(npm publish)
          version=${publish##*+}
        else
          echo "Publishing alpha on npm"
          publish=$(npm publish --tag alpha)
          version=${publish##*+}
        fi
        echo ::set-output name=publish-output::"$version"
      shell: bash

    - name: Remove alpha tag
      id: remove-alpha-tag
      run: |
        if [[ "${{inputs.is-post-merge}}" == 'false' ]]; then
          echo "Removing the alpha-tag"
          chmod +x ${{ github.action_path }}/remove-alpha-tag.sh
          ${{ github.action_path }}/remove-alpha-tag.sh
        else
          echo "Skipped remove-alpha-tag"
        fi
        exit 0
      shell: bash

    - name: Remove old comment from PR
      id: delete-comment
      uses: izhangzhihao/delete-comment@master
      with:
        github_token: ${{ inputs.github-token }}
        delete_user_name: ${{ inputs.git-name }}
        issue_number: ${{ inputs.issue-number }} # remove comments from the current PR

    - name: Write comment on PR
      id: write-comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ inputs.github-token }}
        issue-number: ${{ inputs.issue-number }}
        body: |
          ðŸŽ‰  Successfully published new version  ðŸŽ‰
          âœ…  ${{ steps.publish-package-npm.outputs.publish-output }}

branding:
  icon: "arrow-up-circle"
  color: "purple"
